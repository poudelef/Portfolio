import React from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { FaGithub, FaExternalLinkAlt, FaReact, FaNodeJs, FaPython, FaDatabase, } from 'react-icons/fa';
import StepOneImage from '../assets/StepOne.png';
import HackRiceImage from '../assets/HackRice.png';
import RandomImage from '../assets/random.jpg';
import FoodImage from '../assets/Food.jpg';
import BubbleShieldImage from '../assets/BubbleShield.jpg';
import './Projects.css';

const Projects = () => {

    const projects = [
        {
            id: 1,
            title: 'StepOne',
            description: 'AI-powered Customer Discovery Agent. It offers a smart, interactive platform that simulates real customer conversations. Founders can pitch their ideas to diverse AI personas (like Sarah, a single mom), engage in guided interviews, and receive real-time analysis of pain points, competitive threats, and unmet needs.',
            image: StepOneImage,
            technologies: ['React', 'Node.js', 'Python', 'Multi-agents'],
            github: 'https://github.com/poudelef/StepOne',
            live: 'https://devpost.com/software/project-vzdki4rnjqu0',
            featured: true
        },
        {
            id: 2,
            title: 'Shouternity',
            description: "A player dragon that would move based on the presence and loudness of the audio input, generated by the speaker's voice; to do this, Used Pythonâ€™s SpeechRecognition library as well as incorporated threading for proper audio detection.",
            image: HackRiceImage,
            technologies: ['Python', 'Pygame', 'Pyaudio', 'Threading'],
            github: 'https://github.com/manda1or/HackRice-Game',
            live: 'https://devpost.com/software/shouternity',
            featured: true
        },
        {
            id: 3,
            title: 'Food Image Classification using ResNet-50 and EfficientNetV2',
            description: 'Transfer learning using TensorFlow by applying pre-trained models like ResNet-50 and EfficientNetV2 to classify images from the Food101 (10% subset) dataset. By leveraging powerful feature extractors from TensorFlow Hub, the model efficiently learns to classify food images with limited training data, highlighting the effectiveness of transfer learning in image recognition tasks.',
            image: FoodImage,
            technologies: ['TensorFlow & Keras', 'Python ', 'Matplotlib ', 'Numpy'],
            github: 'https://github.com/poudelef/Transfer-learning---Feature-Extraction-/tree/main',
            live: 'https://github.com/poudelef/Transfer-learning---Feature-Extraction-/tree/main',
            featured: true
        },
        {
            id: 4,
            title: 'NovaTeachDev',
            description: "A AI-powered web-based platform that accepts assignment questions from teachers and alters the semantics of the question using Google Gemini's API according to students preferences (ie Minecraft, Fortnite etc) while maintaining question syntax across all student assignments.",
            image: RandomImage,
            technologies: ['JavaScript', 'Gemini ', 'MongoDB'],
            github: 'https://github.com/atsogt/UC-Hackathon-2024',
            live: 'https://devpost.com/software/novateachdev',
            featured: false
        },
        {
            id: 5,
            title: 'BubbleShield',
            description: 'BubbleShield is a student-focused safety app designed for high schools and universities that empowers users to quickly alert campus security in emergency situations. It centralizes notification tools and real-time incident updates to enhance response efficiency and reduce crime. Built as a cross-platform mobile application, it targets improved campus safety and collaboration with security teams.',
            image: BubbleShieldImage,
            technologies: ['Flutter & Dart', 'Firebase'],
            github: 'https://github.com/poudelef/BubbleShield',
            live: 'https://github.com/poudelef/BubbleShield',
            featured: false
        },
        // {
        //     id: 6,
        //     title: 'Data Visualization Tool',
        //     description: 'An interactive data visualization tool that helps users create beautiful charts and graphs from their data.',
        //     image: 'https://via.placeholder.com/400x250/1a1a1a/64ffda?text=Data+Viz',
        //     technologies: ['D3.js', 'React', 'Python'],
        //     github: 'https://github.com/sambhavpoudel/data-viz',
        //     live: 'https://data-viz-demo.com',
        //     featured: false
        // }
    ];

    const getTechIcon = (tech) => {
        const icons = {
            'React': FaReact,
            'Node.js': FaNodeJs,
            'Python': FaPython,
            'MongoDB': FaDatabase,
            'PostgreSQL': FaDatabase,
            'MongoDB': FaDatabase,
        };
        return icons[tech] || null;
    };

    return (
        <section id="projects" className="projects-section section">
            <div className="container">
                <motion.div
                    className="section-header"
                    initial={{ opacity: 0, y: 50 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8 }}
                    viewport={{ once: true }}
                >
                    <h2>My Projects</h2>

                </motion.div>



                <motion.div
                    className="projects-grid"
                    layout
                >
                    <AnimatePresence mode="wait">
                        {projects.map((project, index) => (
                            <motion.div
                                key={project.id}
                                className={`project-card glass-card ${project.featured ? 'featured' : ''}`}
                                initial={{ opacity: 0, y: 50 }}
                                animate={{ opacity: 1, y: 0 }}
                                exit={{ opacity: 0, y: -50 }}
                                transition={{ duration: 0.6, delay: index * 0.1 }}
                                whileHover={{ y: -10 }}
                                layout
                            >
                                <div className="project-image">
                                    <img src={project.image} alt={project.title} />
                                    <div className="project-overlay">
                                        <div className="project-links">
                                            <motion.a
                                                href={project.github}
                                                target="_blank"
                                                rel="noopener noreferrer"
                                                className="project-link"
                                                whileHover={{ scale: 1.1 }}
                                                whileTap={{ scale: 0.9 }}
                                            >
                                                <FaGithub />
                                            </motion.a>
                                            <motion.a
                                                href={project.live}
                                                target="_blank"
                                                rel="noopener noreferrer"
                                                className="project-link"
                                                whileHover={{ scale: 1.1 }}
                                                whileTap={{ scale: 0.9 }}
                                            >
                                                <FaExternalLinkAlt />
                                            </motion.a>
                                        </div>
                                    </div>
                                    {project.featured && (
                                        <div className="featured-badge">
                                            Featured
                                        </div>
                                    )}
                                </div>

                                <div className="project-content">
                                    <h3>{project.title}</h3>
                                    <p>{project.description}</p>

                                    <div className="project-technologies">
                                        {project.technologies.map((tech) => {
                                            const Icon = getTechIcon(tech);
                                            return (
                                                <span key={tech} className="tech-tag">
                                                    {Icon && <Icon />}
                                                    {tech}
                                                </span>
                                            );
                                        })}
                                    </div>
                                </div>
                            </motion.div>
                        ))}
                    </AnimatePresence>
                </motion.div>

                <motion.div
                    className="cta-section"
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 0.4 }}
                    viewport={{ once: true }}
                >
                    <p>More Projects on Github</p>
                    <motion.a
                        href="https://github.com/poudelef"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="btn-primary"
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                    >
                        View More on GitHub
                    </motion.a>
                </motion.div>
            </div>
        </section>
    );
};

export default Projects; 